/// Define Objects////

DEFINE 

elevatorA, elevatorB USING floor AND direction AND door AND on
    Floor : floor
    Direction : direction 
    Door : door
    Queue SET to empty list
    Status : on

column SET to list [elevatorA, elevatorB];

FOR EACH floor of building
    FOR BOTH directions
     button USING floor AND direction
        Floor : floor
        Direction : direction

calledButtons SET to empty list
      
END DEFINE

FUNCTION elevator.move 
             IF elevator.Direction = up AND elevator.floor is not 10 THEN
                    INCREMENT elevator.floor by one
            ELSE IF elevator.Direction = down AND elevator.floor is not 1 THEN
                    INCREMENT elevator.floor by minus one
            END IF
END FUNCTION
            

FUNCTION elevator.open 
            SET elevator.Door to open
END FUNCTION

FUNCTION elevator.close 
            SET elevator.Door to close
END FUNCTION

FUNCTION elevator.select(n)
            ADD n to elevator.Queue
            IF elevator.Direction is idle THEN
                    IF n > elevator.Floor THEN
                            SET elevator.Direction to up
                    ELSE IF elevator.Floor > n THEN
                            SET elevator.Direction to down
                    END IF
            END IF
END FUNCTION

FUNCTION elevator.checkfloor
        FOR EACH item IN elevator.Queue
            IF 
                elevator.floor = item THEN
                    Elevator stops at floor
                    elevator.open
                    SENSOR for movement in doorframe
                        IF no movement for 5 seconds THEN
                            elevator.close
                        END IF
                REMOVE item IN elevator.Queue
            END IF
        END FOR

        IF elevator.Queue is not empty THEN
            GET maximum value of item IN elevator.Queue
            GET minimum value of item IN elevator.Queue
        END IF

            IF elevator.Queue is empty THEN
                    SET elevator.Direction TO idle
            ELSE IF elevator.Direction = up AND elevator.Floor > maximum value THEN
                    SET elevator.Direction TO Down
            ELSE IF elevator.Direction = down AND elevator.Floor < minimum value THEN
                    SET elevator.Direction TO up
            END IF
END FUNCTION

FUNCTION column.choose(button)

        IF both elevators are idle THEN 
            SEQUENCE
                GET elevator closest to button
                ADD button.Floor IN elevator.Queue
                SET elevator.Direction towards button.Floor
                REMOVE button IN calledButtons
            END SEQUENCE
        ELSE IF one elevator is moving and one is idle THEN

                CASE button.Direction OF
                    button.Direction = up :
                        IF elevator.Direction = up AND button.Floor > elevator.Floor THEN
                            SEQUENCE
                                GET up elevator
                                ADD button.Floor IN elevator.Queue
                                REMOVE button IN calledButtons
                            END SEQUENCE
                        ELSE
                            SEQUENCE
                                GET idle elevator
                                ADD button.Floor IN elevator.Queue
                                SET elevator.Direction towards button.Floors
                                REMOVE button IN calledButtons
                            END SEQUENCE
                        END IF
                    button.Direction = down :
                        IF elevator.Direction = down AND button.floor < elevator.Floor THEN
                            SEQUENCE
                                GET down elevator
                                ADD button.Floor IN selected elevator.Queue
                                REMOVE button IN calledButtons
                            END SEQUENCE
                        ELSE
                            SEQUENCE
                                GET idle elevator
                                ADD button.Floor IN selected elevator.Queue
                                SET selected elevator.Direction towards button.Floors
                                REMOVE button IN calledButtons
                            END SEQUENCE
                        END IF
                END CASE
        ELSE IF both elevators are moving up THEN
            IF button.Direction = up THEN
                    IF button.Floor > elevator.Floor for both elevators THEN
                        SEQUENCE
                            GET closest elevator
                            ADD button.Floor IN elevator.Queue
                            REMOVE button IN calledButtons
                        END SEQUENCE
                    ELSE IF button.Floor > elevator.Floor for one elevator THEN
                        SEQUENCE
                            GET this elevator
                            ADD button.Floor IN selected elevator.Queue
                            REMOVE button IN calledButtons
                        END SEQUENCE
                    END IF
            END IF
        ELSE IF both elevators are moving down THEN
            IF button.Direction = down THEN
                     IF button.Floor < elevator.Floor for both elevators THEN
                        SEQUENCE
                            GET closest elevator
                            ADD button.Floor IN selected elevator.Queue
                            REMOVE button IN calledButtons
                        END SEQUENCE
                    ELSE IF button.Floor < elevator.Floor for one elevator THEN
                        SEQUENCE
                            GET this elevator
                            ADD button.Floor IN selected elevator.Queue
                            REMOVE button IN calledButtons
                        END SEQUENCE
                    END IF
            END IF
        ELSE IF elevators are moving in opposite direction THEN
            CASE button.Direction OF
                button.Direction = up :
                    IF elevator.Direction is up AND button.Floor > elevator.Floor THEN
                        SEQUENCE
                            GET up elevator
                            ADD button.Floor IN selected elevator.Queue
                            REMOVE button IN calledButtons
                        END SEQUENCE
                    END IF

                button.Direction = down :
                    IF elevator.Direction is down AND button.Floor < elevator.Floor THEN
                        SEQUENCE
                            GET down elevator
                            ADD button.Floor IN elevator.Queue
                            REMOVE button IN calledButtons
                        END SEQUENCE
                    END IF
            END CASE
        END IF
END FUNCTION

FUNCTION column.move
            CALL elevatorA.move
            CALL elevatorB.move
            CALL elevatorA.checkfloor
            CALL elevator.checkfloor
END FUNCTION
   

/////ELEVATORS ANSWER CALLS //////////

WHILE elevatorA.Status AND elevatorB.Status are on
    IF call button is pressed THEN
        ADD button IN calledButtons
    END IF

    WHILE calledButtons is not empty
        FOR EACH buttons in calledButtons
            CALL column.choose(button)
        END FOR
    END WHILE

    CALL Column.move

    IF floor selection button of elevator to floor m is pressed THEN
        CALL elevator.Select(m)
    END IF

END WHILE













